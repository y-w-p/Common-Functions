com.ywp.interceptors.LoginInterceptor

import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;
import org.springframework.web.servlet.HandlerInterceptor;
import org.springframework.web.servlet.ModelAndView;
import javax.servlet.http.HttpSession;


//登录拦截器
public class LoginInterceptor implements HandlerInterceptor {


//在拦截点执行前拦截
@Override
public boolean preHandle(HttpServletRequest request, HttpServletResponse response, Object arg2) throws Exception {
  ，如果返回true则不执行拦截点后的操作（拦截成功）
  //返回false则不执行拦截
 HttpSession session = request.getsession;
 String name = session.getAttribute("name");
  if(name.equals("")) {
    //登录失败，跳转到登录页
    //response.sendRedirect(request.getContextPath());
    return false;
  }else{
    //登陆成功，不拦截
    return true;
  }
}
  
  
  //处理过程中执行拦截
  @Override
	public void postHandle(HttpServletRequest arg0, HttpServletResponse arg1, Object arg2, ModelAndView arg3)
			throws Exception {
		
	}



//执行完毕，返回前拦截
	@Override
	public void afterCompletion(HttpServletRequest arg0, HttpServletResponse arg1, Object arg2, Exception arg3)
			throws Exception {
		
	}

	
}







//spring mvc配置

<!-- 配置用于session验证的拦截器 -->
    <!-- 
        如果有多个拦截器满足拦截处理的要求，则依据配置的先后顺序来执行
     -->
    <mvc:interceptors>
        <mvc:interceptor>
            <!-- 拦截所有的请求，这个必须写在前面，也就是写在【不拦截】的上面 -->
            <mvc:mapping path="/**" />
            <!-- 但是排除下面这些，也就是不拦截请求 -->
            <mvc:exclude-mapping path="/login.html" />
            <mvc:exclude-mapping path="/account/login.do" />
            <mvc:exclude-mapping path="/account/regist.do" />
	    //拦截器全限定类名
            <bean class="com.ywp.interceptors.LoginInterceptor" />
        </mvc:interceptor>
    </mvc:interceptors>





